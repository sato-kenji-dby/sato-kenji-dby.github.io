import{k as x,l as M,a as y,o as P,q as A,e as f,u as C,f as $}from"./index-DriAlrgb.js";import{c as b}from"./vexflow-helper-BJ71SLUW.js";const L=`<!-- src/tools/IntervalCalculator/IntervalCalculator.html -->
<div class="tool-section interval-calculator-tool">
  <!-- 更通用的标题 -->
  <h3>音程分析器</h3>
  <!-- 更新描述，加入第三种格式 -->
  <p>输入格式:
      <br>1. 两音符: <code>C4 G4</code> (计算音程)
      <br>2. 基础音符 + 音程: <code>C4 M3 P5</code> (构建声部)
      <br>3. 多个音符: <code>C4 E4 G4 B4</code> (识别和弦)
      <br>(所有音符必须带八度)
  </p>

  <div class="interval-input-area">
    <label for="interval-notes-input">输入:</label>
    <!-- 更新 placeholder -->
    <input type="text" id="interval-notes-input" placeholder="例如: C4 G4 或 C4 M3 P5 或 C4 E4 G4">
    <!-- 更通用的按钮文本 -->
    <button id="calculate-interval-button">分析</button>
    <button id="clear-interval-button" class="secondary-button">清除</button>
  </div>

  <div id="interval-result-area" class="result-display-area">
      <p style="display: none;">结果:</p> <!-- 初始隐藏 -->
      <div id="interval-error-output" class="error-message"></div>
      <!-- 声部构建或多音符输入的音符显示 -->
      <div id="voicing-notes-output"></div>
      <!-- 新增：和弦检测结果显示 -->
      <div id="chord-detection-output"></div>
      <!-- 音程计算模式专用 -->
      <div id="interval-details-container" style="display: none;">
          <div id="interval-name-output"></div>
          <div id="interval-semitones-output"></div>
          <div id="interval-consonance-output"></div>
          <!-- 包裹两个选项的容器 -->
          <div class="interval-options-container">
              <div class="option-group">
                  <input type="checkbox" id="invert-interval-checkbox">
                  <label for="invert-interval-checkbox">显示转位</label>
              </div>
              <div class="option-group">
                  <input type="checkbox" id="simplify-interval-checkbox">
                  <label for="simplify-interval-checkbox">显示简化</label>
              </div>
          </div>
      </div>
  </div>

  <!-- VexFlow 显示容器 -->
  <div class="vexflow-display-container interval-score-container" style="display: none;">
      <div class="score-item">
          <!-- 标题将由 JS 动态设置 -->
          <h4 id="harmonic-title"></h4>
          <div id="harmonic-interval-score" class="vexflow-score-container" style="min-height: 150px;"></div>
      </div>
      <div class="score-item">
          <!-- 标题将由 JS 动态设置 -->
          <h4 id="melodic-title"></h4>
          <div id="melodic-interval-score" class="vexflow-score-container" style="min-height: 150px;"></div>
      </div>
  </div>
</div>`;var g=x;function B(t){const o=x(t);return o.empty?"":o.simple+o.q}function H(t){const o=x(t);if(o.empty)return"";const e=(7-o.step)%7,r=o.type==="perfectable"?-o.alt:-(o.alt+1);return x({step:e,alt:r,oct:o.oct,dir:o.dir}).name}var K=M,G=t=>{const o=t.reduce((e,r)=>{const n=y(r).chroma;return n!==void 0&&(e[n]=e[n]||y(r).name),e},{});return e=>o[e]};function w(t,o={}){const e=t.map(n=>y(n).pc).filter(n=>n);return y.length===0?[]:X(e,1,o).filter(n=>n.weight).sort((n,l)=>l.weight-n.weight).map(n=>n.name)}var N={anyThirds:384,perfectFifth:16,nonPerfectFifths:40,anySeventh:3},S=t=>o=>!!(o&t),j=S(N.anyThirds),U=S(N.perfectFifth),z=S(N.anySeventh),J=S(N.nonPerfectFifths);function W(t){const o=parseInt(t.chroma,2);return j(o)&&U(o)&&z(o)}function Q(t){const o=parseInt(t,2);return J(o)?t:(o|16).toString(2)}function X(t,o,e){const r=t[0],n=y(r).chroma,l=G(t),s=P(t,!1),c=[];return s.forEach((i,a)=>{const u=e.assumePerfectFifth&&Q(i);A().filter(h=>e.assumePerfectFifth&&W(h)?h.chroma===u:h.chroma===i).forEach(h=>{const m=h.aliases[0],v=l(a);a!==n?c.push({weight:.5*o,name:`${v}${m}/${r}`}):c.push({weight:1*o,name:`${v}${m}`})})}),c}function Y(t){const o={inputField:t.querySelector("#interval-notes-input"),calculateButton:t.querySelector("#calculate-interval-button"),clearIntervalButton:t.querySelector("#clear-interval-button"),resultArea:t.querySelector("#interval-result-area"),resultTitle:t.querySelector("#interval-result-area > p:first-child"),errorOutput:t.querySelector("#interval-error-output"),voicingNotesOutput:t.querySelector("#voicing-notes-output"),chordDetectionOutput:t.querySelector("#chord-detection-output"),intervalDetailsContainer:t.querySelector("#interval-details-container"),intervalNameOutput:t.querySelector("#interval-name-output"),semitonesOutput:t.querySelector("#interval-semitones-output"),consonanceOutput:t.querySelector("#interval-consonance-output"),invertCheckbox:t.querySelector("#invert-interval-checkbox"),simplifyCheckbox:t.querySelector("#simplify-interval-checkbox"),scoreContainer:t.querySelector(".vexflow-display-container"),harmonicScoreDiv:t.querySelector("#harmonic-interval-score"),melodicScoreDiv:t.querySelector("#melodic-interval-score"),harmonicTitle:t.querySelector("#harmonic-title"),melodicTitle:t.querySelector("#melodic-title")};return!o.inputField||!o.calculateButton||!o.errorOutput||!o.harmonicScoreDiv||!o.melodicScoreDiv?(console.error("乐理分析器错误: 缺少关键 UI 元素。"),null):((!o.chordDetectionOutput||!o.intervalDetailsContainer||!o.voicingNotesOutput)&&console.warn("乐理分析器警告: 部分结果显示区域未找到。"),o)}function Z(t){const o=t.trim();if(!o)return{mode:null,data:null,error:"输入不能为空。"};const e=o.split(/\s+/).filter(i=>i);if(e.length<2)return{mode:null,data:null,error:"输入至少需要两部分。"};const r=e[0],n=f(r);if(n.empty||n.oct===null)return{mode:null,data:null,error:`第一部分 "${r}" 必须是有效的带八度音符。`};const l=e[1],s=g(l),c=f(l);if(s.empty)if(!c.empty&&c.oct!==null){const i=[n.name];let a=null;for(let u=1;u<e.length;u++){const d=f(e[u]);if(d.empty||d.oct===null){a=e[u];break}i.push(d.name)}return a?{mode:null,data:null,error:`输入中包含无效或缺少八度的音符: "${a}"。`}:i.length===2?{mode:"twoNotes",data:{notes:i},error:null}:(i.sort((u,d)=>(C(u)??1/0)-(C(d)??1/0)),{mode:"chordDetect",data:{notes:i},error:null})}else return e.length===2?{mode:null,data:null,error:`无法识别第二部分 "${l}"，它既不是有效音程也不是有效音符(或缺少八度)。`}:{mode:null,data:null,error:"输入格式无法识别。请检查音符是否都带八度。"};else if(e.length===2){const i=et(n.name,l);return i.error?{mode:null,data:null,error:i.error}:{mode:"twoNotes",data:{notes:[n.name,i.note]},error:null}}else{const i=e.slice(1),a=i.filter(u=>g(u).empty);return a.length>0?{mode:null,data:null,error:`以下部分不是有效的音程: ${a.join(", ")}`}:{mode:"multiIntervalVoicing",data:{baseNote:n.name,intervals:i},error:null}}}function _(t){if(!t)return"未知";const o=g(t);if(o.empty)return"未知";const e=o.simple,r=o.q;return r==="P"&&[1,4,5,8].includes(e)?"完全协和":(r==="M"||r==="m")&&[3,6].includes(e)?"不完全协和":"不协和"}function tt(t,o){try{const e=K(t,o);if(!e||e==="")return{props:null,error:"无法计算音程，请检查输入。"};const r=g(e);return r.empty?{props:null,error:`无法解析计算出的音程 "${e}"。`}:{props:r,error:null}}catch(e){return console.error("计算音程时出错:",e),{props:null,error:"计算过程中发生错误。"}}}function ot(t,o){console.log("calculateVoicingNotes - 输入:",{baseNote:t,intervalNames:o});const e=[];try{e.push(t);for(const r of o){const n=$(t,r),l=f(n);if(l.empty)return{notes:null,error:`从基础音符 "${t}" 应用音程 "${r}" 时出错。`};e.includes(l.name)||e.push(l.name)}return console.log("calculateVoicingNotes - 排序前:",[...e]),e.sort((r,n)=>(C(r)??1/0)-(C(n)??1/0)),console.log("calculateVoicingNotes - 排序后:",[...e]),{notes:e,error:null}}catch(r){return console.error("构建声部时出错:",r),{notes:null,error:`构建声部时发生错误: ${r.message}`}}}function k(t){if(console.log("detectChordFromNotes - START - 输入音符:",[...t]),!t||t.length<2)return console.log("detectChordFromNotes - END - 错误: 音符不足。"),{chords:[],error:"和弦检测至少需要输入两个音符。"};try{if(typeof w!="function")return console.error("detectChordFromNotes - ERROR: Chord.detect 不是一个函数!"),{chords:[],error:"内部错误：无法访问和弦检测功能。"};const o=w(t);return console.log("detectChordFromNotes - Chord.detect 返回:",o),console.log("detectChordFromNotes - END - 成功。"),{chords:o,error:null}}catch(o){return console.error("detectChordFromNotes - ERROR during Chord.detect:",o),console.log("detectChordFromNotes - END - 异常退出。"),{chords:[],error:`和弦检测过程中发生错误: ${o.message}`}}}function et(t,o){try{const e=$(t,o),r=f(e);return r.empty?{note:null,error:`应用音程 "${o}" 到 "${t}" 时出错，结果无效。`}:{note:r.name,error:null}}catch(e){return console.error("计算单音程移调时出错:",e),{note:null,error:`移调时发生错误: ${e.message}`}}}function O(t){const o=f(t);if(o.empty||o.oct===null)return null;let e="";return o.acc==="b"?e="b":o.acc==="#"?e="#":o.acc==="bb"?e="bb":(o.acc==="x"||o.acc==="##")&&(e="##"),`${o.letter.toLowerCase()}${e}/${o.oct}`}function F(t){if(!t||t.length===0)return"treble";const o=t.map(r=>C(r)).filter(r=>r!==null);return o.length===0||o.reduce((r,n)=>r+n,0)/o.length>=60?"treble":"bass"}function rt(t,o,e,r=!1){if(!t||!t.harmonicScoreDiv||!t.melodicScoreDiv){console.error("渲染音程谱例错误：缺少 elements 或 score divs。"),t&&t.errorOutput&&(t.errorOutput.textContent="渲染谱例时发生内部错误。");return}const n=O(o),l=O(e);if(!n||!l){console.error("无法为 VexFlow 准备 keys:",o,e),t.errorOutput&&(t.errorOutput.textContent="无法渲染：音符格式无效");return}const s=t.harmonicScoreDiv.id,c=t.melodicScoreDiv.id;if(!s||!c){console.error("渲染错误：VexFlow 容器缺少 ID。"),t.errorOutput&&(t.errorOutput.textContent="渲染错误：容器缺少 ID。");return}t.harmonicTitle.textContent="和声音程",t.melodicTitle.textContent="旋律音程",t.harmonicTitle.style.display="block",t.melodicTitle.style.display="block";const i=F([o,e]);t.harmonicScoreDiv.innerHTML="",t.melodicScoreDiv.innerHTML="";const a={elementId:s,width:150,height:150,staves:[{clef:i,notes:[{keys:[n,l].sort(),duration:"w"}]}]},u={elementId:c,width:200,height:150,staves:[{clef:i,notes:[{keys:[n],duration:"h"},{keys:[l],duration:"h"}]}]};try{b(s,a),b(c,u)}catch(d){console.error("渲染音程谱例出错:",d),t.errorOutput&&(t.errorOutput.textContent=`渲染错误: ${d.message}`)}}function nt(t,o){if(console.log("renderVoicingScores - 接收到的音符:",[...o]),!t||!t.harmonicScoreDiv||!t.melodicScoreDiv){console.error("渲染声部谱例错误：缺少 elements 或 score divs。"),t&&t.errorOutput&&(t.errorOutput.textContent="渲染谱例时发生内部错误。");return}if(!o||o.length<1){console.error("渲染声部谱例错误：无效的音符数组。"),t&&t.errorOutput&&(t.errorOutput.textContent="无法渲染谱例：无有效音符。");return}const e=o.map(O).filter(a=>a);if(e.length!==o.length){console.error("部分音符无法转换为 VexFlow keys:",o),t&&t.errorOutput&&(t.errorOutput.textContent="渲染谱例时发生错误：部分音符格式无效。");return}const r=t.harmonicScoreDiv.id,n=t.melodicScoreDiv.id;if(!r||!n){console.error("渲染错误：VexFlow 容器缺少 ID。"),t.errorOutput&&(t.errorOutput.textContent="渲染错误：容器缺少 ID。");return}t.harmonicTitle.textContent="和声声部",t.melodicTitle.textContent="旋律序列",t.harmonicTitle.style.display="block",t.melodicTitle.style.display="block";const l=F(o);t.harmonicScoreDiv.innerHTML="",t.melodicScoreDiv.innerHTML="";const s={elementId:r,width:Math.max(150,40+e.length*20),height:150,staves:[{clef:l,notes:[{keys:e.slice().sort(),duration:"w"}]}]},c=e.map(a=>({keys:[a],duration:"q"}));console.log("renderVoicingScores - 用于旋律谱例的 VexNotes:",c);const i={elementId:n,width:Math.max(200,60+c.length*40),height:150,staves:[{clef:l,timeSignature:`${c.length}/4`,notes:c}]};c.length>8?(i.staves[0].timeSignature="4/4",i.width=Math.max(300,60+c.length*30)):c.length>0&&(i.staves[0].timeSignature=`${c.length}/4`);try{b(r,s),b(n,i),console.log("renderVoicingScores - 谱例渲染调用完成。")}catch(a){console.error("渲染 VexFlow 谱例时出错:",a),t.errorOutput&&(t.errorOutput.textContent=`渲染谱例时发生错误: ${a.message}`),t.harmonicTitle.style.display="none",t.melodicTitle.style.display="none"}}function D(t){t&&(t.errorOutput.textContent="",t.voicingNotesOutput.textContent="",t.chordDetectionOutput&&(t.chordDetectionOutput.textContent=""),t.intervalDetailsContainer&&(t.intervalDetailsContainer.style.display="none"),t.intervalNameOutput.textContent="",t.semitonesOutput.textContent="",t.consonanceOutput.textContent="",t.scoreContainer&&(t.scoreContainer.style.display="none"),t.harmonicScoreDiv.innerHTML="",t.melodicScoreDiv.innerHTML="",t.harmonicTitle&&(t.harmonicTitle.style.display="none"),t.melodicTitle&&(t.melodicTitle.style.display="none"),t.resultTitle&&(t.resultTitle.style.display="none"))}function p(t,o){D(t),t.errorOutput.textContent=`错误: ${o}`}function it(t,o,e,r,n){if(D(t),!o||o.empty){p(t,"无法获取有效的音程属性。");return}t.resultTitle&&(t.resultTitle.style.display="block");const l=o.q,s=o.num,i=`${o.dir===-1?"-":""}${l}${s}`,a=o.semitones,u=_(o.name),d=Math.abs(o.num)>8;let h=`音程: ${i}`;if(r&&(h+=" (转位)"),n&&d){const m=B(o.name),v=g(m);if(v.empty)h+=" [无法简化]";else{const T=v.q,E=v.num,q=`${v.dir===-1?"-":""}${T}${E}`;h+=` [简化: ${q}]`}}t.intervalNameOutput.textContent=h,t.semitonesOutput.textContent=`半音数量: ${a}${r?" (转位)":""}`,t.consonanceOutput.textContent=`协和性: ${u}${r?" (转位)":""}`,t.intervalDetailsContainer&&(t.intervalDetailsContainer.style.display="block"),e&&e.length===2&&t.scoreContainer&&(t.scoreContainer.style.display="flex",rt(t,e[0],e[1],r))}function I(t,o,e){if(console.log("displayChordResult - START - Received:",{detectedChords:o,inputNotes:e}),D(t),!e||e.length===0){console.log("displayChordResult - END - 错误: 无效输入音符。"),p(t,"无有效输入音符。");return}if(t.resultTitle&&(t.resultTitle.style.display="block"),t.intervalDetailsContainer&&(t.intervalDetailsContainer.style.display="none"),!t.voicingNotesOutput||!t.chordDetectionOutput){console.error("displayChordResult - ERROR: UI 元素缺失 (voicingNotesOutput 或 chordDetectionOutput)");return}t.voicingNotesOutput.textContent=`相关音符: ${e.join(" ")}`,console.log("displayChordResult - 设置 voicingNotesOutput 完成。"),o&&o.length>0?t.chordDetectionOutput.textContent=`检测到的和弦: ${o.join(", ")}`:t.chordDetectionOutput.textContent="未检测到明确的和弦。",console.log("displayChordResult - 设置 chordDetectionOutput 完成。"),t.scoreContainer?t.harmonicScoreDiv&&t.melodicScoreDiv?(t.scoreContainer.style.display="flex",console.log("displayChordResult - 准备调用 renderVoicingScores..."),nt(t,e)):console.error("displayChordResult - ERROR: scoreContainer 内的谱例元素缺失！"):console.warn("displayChordResult - WARN: scoreContainer 元素未找到。"),console.log("displayChordResult - END")}function V(t){t&&(t.inputField.value="",D(t),t.invertCheckbox&&(t.invertCheckbox.checked=!1),t.simplifyCheckbox&&(t.simplifyCheckbox.checked=!1),console.log("输入和结果已清除。"))}function R(t){if(console.log("handleCalculation - START"),!t){console.log("handleCalculation - END - elements 为空");return}const o=t.inputField.value,e=Z(o);if(console.log("handleCalculation - 解析结果:",e),e.error){p(t,e.error),console.log("handleCalculation - END - 解析错误");return}switch(e.mode){case"twoNotes":{console.log(">>> handleCalculation - Entering twoNotes case");const{notes:r}=e.data;console.log("handleCalculation - twoNotes - notes:",r);const n=t.invertCheckbox?t.invertCheckbox.checked:!1,l=t.simplifyCheckbox?t.simplifyCheckbox.checked:!1;console.log("handleCalculation - twoNotes - options:",{showInversion:n,showSimplified:l});let s=null,c=null;const i=tt(r[0],r[1]);if(console.log("handleCalculation - twoNotes - originalResult:",i),i.error)console.log("handleCalculation - twoNotes - 原始计算出错:",i.error),c=i.error;else if(!i.props||i.props.empty)console.error("handleCalculation - twoNotes - 原始计算结果无效但没有错误信息:",i),c="未能计算有效的原始音程。";else if(n){console.log("handleCalculation - twoNotes - 尝试转位:",i.props.name);try{const a=H(i.props.name);if(console.log("handleCalculation - twoNotes - 转位名称:",a),!a||a==="")console.error("handleCalculation - twoNotes - Interval.invert 返回空!"),c="无法计算此音程的转位(空结果)。";else{const u=g(a);console.log("handleCalculation - twoNotes - 转位属性:",u),!u||u.empty?(console.error("handleCalculation - twoNotes - 获取转位属性失败!"),c="无法获取转位音程的属性。"):(s=u,console.log("handleCalculation - twoNotes - 转位成功，finalResultProps 已设置。"))}}catch(a){console.error("handleCalculation - twoNotes - 转位计算异常:",a),c=`计算转位时出错: ${a.message}`}}else console.log("handleCalculation - twoNotes - 使用原始结果。"),s=i.props;console.log("handleCalculation - twoNotes - 准备显示，finalResultProps:",s,"calculationError:",c),c?p(t,c):s&&!s.empty?it(t,s,r,n,l):(console.error("handleCalculation - twoNotes - 最终状态异常：无错误但结果无效。"),p(t,"无法获取有效的音程属性(最终检查)。")),console.log("<<< handleCalculation - Exiting twoNotes case");break}case"multiIntervalVoicing":{console.log(">>> handleCalculation - Entering multiIntervalVoicing case");const{baseNote:r,intervals:n}=e.data;console.log("handleCalculation - multiIntervalVoicing - data:",{baseNote:r,intervals:n});const l=ot(r,n);if(console.log("handleCalculation - multiIntervalVoicing - voicingResult:",l),l.error)p(t,l.error);else if(!l.notes||l.notes.length===0)console.error("handleCalculation - multiIntervalVoicing - voicingResult.notes 无效"),p(t,"未能生成有效的音符列表。");else{console.log("handleCalculation - multiIntervalVoicing - 准备调用 detectChordFromNotes...");const s=k(l.notes);console.log("handleCalculation - multiIntervalVoicing - chordResult:",s),s.error?p(t,s.error):(console.log("handleCalculation - multiIntervalVoicing - 准备调用 displayChordResult..."),I(t,s.chords,l.notes))}console.log("<<< handleCalculation - Exiting multiIntervalVoicing case");break}case"chordDetect":{console.log(">>> handleCalculation - Entering chordDetect case");const{notes:r}=e.data;console.log("handleCalculation - chordDetect - data:",{notes:r}),console.log("handleCalculation - chordDetect - 准备调用 detectChordFromNotes...");const n=k(r);console.log("handleCalculation - chordDetect - chordResult:",n),n.error?p(t,n.error):(console.log("handleCalculation - chordDetect - 准备调用 displayChordResult..."),I(t,n.chords,r)),console.log("<<< handleCalculation - Exiting chordDetect case");break}default:console.log("handleCalculation - 未知模式:",e.mode),p(t,"无法识别的处理模式。")}console.log("handleCalculation - END")}function lt(t){if(!t)return;t.calculateButton&&t.calculateButton.addEventListener("click",()=>R(t)),t.clearIntervalButton&&t.clearIntervalButton.addEventListener("click",()=>V(t)),t.inputField;const o=()=>{const r=(t.inputField?t.inputField.value:"").trim().split(/\s+/).filter(l=>l);let n=!1;if(r.length===2){const l=f(r[0]),s=f(r[1]),c=g(r[1]);!l.empty&&l.oct!==null&&(!s.empty&&s.oct!==null?n=!0:c.empty||(n=!0))}n?(console.log("Option changed, recalculating for interval mode."),R(t)):console.log("Option changed, but not in interval mode. No recalculation.")};t.invertCheckbox&&t.invertCheckbox.addEventListener("change",o),t.simplifyCheckbox&&t.simplifyCheckbox.addEventListener("change",o)}function ut(t){if(!t){console.error("乐理分析器初始化失败: 未提供容器元素。");return}t.innerHTML=L;const o=Y(t);o&&(lt(o),V(o),console.log("乐理分析器工具已初始化 (支持音程/声部/和弦)。"))}export{ut as initializeIntervalCalculator};
