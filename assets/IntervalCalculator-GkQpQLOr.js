import{g as f,b as h,t as D}from"./index-BqBuALeO.js";import{i as q,g as v,d as m,a as V,s as M}from"./index-CR7BTo9t.js";import{c as x}from"./vexflow-helper-BJ71SLUW.js";const F=`<!-- src/tools/IntervalCalculator/IntervalCalculator.html -->
<div class="tool-section interval-calculator-tool">
  <!-- 更通用的标题 -->
  <h3>音程分析器</h3>
  <!-- 更新描述，加入第三种格式 -->
  <p>输入格式:
      <br>1. 两音符: <code>C4 G4</code> (计算音程)
      <br>2. 基础音符 + 音程: <code>C4 M3 P5</code> (构建声部)
      <br>3. 多个音符: <code>C4 E4 G4 B4</code> (识别和弦)
      <br>(所有音符必须带八度)
  </p>

  <div class="interval-input-area">
    <label for="interval-notes-input">输入:</label>
    <!-- 更新 placeholder -->
    <input type="text" id="interval-notes-input" placeholder="例如: C4 G4 或 C4 M3 P5 或 C4 E4 G4">
    <!-- 更通用的按钮文本 -->
    <button id="calculate-interval-button">分析</button>
    <button id="clear-interval-button" class="secondary-button">清除</button>
  </div>

  <div id="interval-result-area" class="result-display-area">
      <p style="display: none;">结果:</p> <!-- 初始隐藏 -->
      <div id="interval-error-output" class="error-message"></div>
      <!-- 声部构建或多音符输入的音符显示 -->
      <div id="voicing-notes-output"></div>
      <!-- 新增：和弦检测结果显示 -->
      <div id="chord-detection-output"></div>
      <!-- 音程计算模式专用 -->
      <div id="interval-details-container" style="display: none;">
          <div id="interval-name-output"></div>
          <div id="interval-semitones-output"></div>
          <div id="interval-consonance-output"></div>
          <!-- 包裹两个选项的容器 -->
          <div class="interval-options-container">
              <div class="option-group">
                  <input type="checkbox" id="invert-interval-checkbox">
                  <label for="invert-interval-checkbox">显示转位</label>
              </div>
              <div class="option-group">
                  <input type="checkbox" id="simplify-interval-checkbox">
                  <label for="simplify-interval-checkbox">显示简化</label>
              </div>
          </div>
      </div>
  </div>

  <!-- VexFlow 显示容器 -->
  <div class="vexflow-display-container interval-score-container" style="display: none;">
      <div class="score-item">
          <!-- 标题将由 JS 动态设置 -->
          <h4 id="harmonic-title"></h4>
          <div id="harmonic-interval-score" class="vexflow-score-container" style="min-height: 150px;"></div>
      </div>
      <div class="score-item">
          <!-- 标题将由 JS 动态设置 -->
          <h4 id="melodic-title"></h4>
          <div id="melodic-interval-score" class="vexflow-score-container" style="min-height: 150px;"></div>
      </div>
  </div>
</div>`;function E(t){const r={inputField:t.querySelector("#interval-notes-input"),calculateButton:t.querySelector("#calculate-interval-button"),clearIntervalButton:t.querySelector("#clear-interval-button"),resultArea:t.querySelector("#interval-result-area"),resultTitle:t.querySelector("#interval-result-area > p:first-child"),errorOutput:t.querySelector("#interval-error-output"),voicingNotesOutput:t.querySelector("#voicing-notes-output"),chordDetectionOutput:t.querySelector("#chord-detection-output"),intervalDetailsContainer:t.querySelector("#interval-details-container"),intervalNameOutput:t.querySelector("#interval-name-output"),semitonesOutput:t.querySelector("#interval-semitones-output"),consonanceOutput:t.querySelector("#interval-consonance-output"),invertCheckbox:t.querySelector("#invert-interval-checkbox"),simplifyCheckbox:t.querySelector("#simplify-interval-checkbox"),scoreContainer:t.querySelector(".vexflow-display-container"),harmonicScoreDiv:t.querySelector("#harmonic-interval-score"),melodicScoreDiv:t.querySelector("#melodic-interval-score"),harmonicTitle:t.querySelector("#harmonic-title"),melodicTitle:t.querySelector("#melodic-title")};return!r.inputField||!r.calculateButton||!r.errorOutput||!r.harmonicScoreDiv||!r.melodicScoreDiv?(console.error("乐理分析器错误: 缺少关键 UI 元素。"),null):((!r.chordDetectionOutput||!r.intervalDetailsContainer||!r.voicingNotesOutput)&&console.warn("乐理分析器警告: 部分结果显示区域未找到。"),r)}function L(t){const r=t.trim();if(!r)return{mode:null,data:null,error:"输入不能为空。"};const o=r.split(/\s+/).filter(l=>l);if(o.length<2)return{mode:null,data:null,error:"输入至少需要两部分。"};const e=o[0],n=f(e);if(n.empty||n.oct===null)return{mode:null,data:null,error:`第一部分 "${e}" 必须是有效的带八度音符。`};const i=o[1],a=v(i),c=f(i);if(a.empty)if(!c.empty&&c.oct!==null){const l=[n.name];let u=null;for(let s=1;s<o.length;s++){const d=f(o[s]);if(d.empty||d.oct===null){u=o[s];break}l.push(d.name)}return u?{mode:null,data:null,error:`输入中包含无效或缺少八度的音符: "${u}"。`}:l.length===2?{mode:"twoNotes",data:{notes:l},error:null}:(l.sort((s,d)=>(h(s)??1/0)-(h(d)??1/0)),{mode:"chordDetect",data:{notes:l},error:null})}else return o.length===2?{mode:null,data:null,error:`无法识别第二部分 "${i}"，它既不是有效音程也不是有效音符(或缺少八度)。`}:{mode:null,data:null,error:"输入格式无法识别。请检查音符是否都带八度。"};else if(o.length===2){const l=A(n.name,i);return l.error?{mode:null,data:null,error:l.error}:{mode:"twoNotes",data:{notes:[n.name,l.note]},error:null}}else{const l=o.slice(1),u=l.filter(s=>v(s).empty);return u.length>0?{mode:null,data:null,error:`以下部分不是有效的音程: ${u.join(", ")}`}:{mode:"multiIntervalVoicing",data:{baseNote:n.name,intervals:l},error:null}}}function B(t){if(!t)return"未知";const r=v(t);if(r.empty)return"未知";const o=r.simple,e=r.q;return e==="P"&&[1,4,5,8].includes(o)?"完全协和":(e==="M"||e==="m")&&[3,6].includes(o)?"不完全协和":"不协和"}function H(t,r){try{let o=t,e=r;const n=h(t),i=h(r);if(n===null||i===null)return{props:null,error:"无法获取音符的 MIDI 值，请检查输入。"};n>i&&(o=r,e=t);const a=V(o,e);if(!a||a==="")return{props:null,error:"无法计算音程，请检查输入。"};const c=v(a);return c.empty?{props:null,error:`无法解析计算出的音程 "${a}"。`}:{props:c,error:null}}catch(o){return console.error("计算音程时出错:",o),{props:null,error:"计算过程中发生错误。"}}}function P(t,r){console.log("calculateVoicingNotes - 输入:",{baseNote:t,intervalNames:r});const o=[];try{o.push(t);for(const e of r){const n=D(t,e),i=f(n);if(i.empty)return{notes:null,error:`从基础音符 "${t}" 应用音程 "${e}" 时出错。`};o.includes(i.name)||o.push(i.name)}return console.log("calculateVoicingNotes - 排序前:",[...o]),o.sort((e,n)=>(h(e)??1/0)-(h(n)??1/0)),console.log("calculateVoicingNotes - 排序后:",[...o]),{notes:o,error:null}}catch(e){return console.error("构建声部时出错:",e),{notes:null,error:`构建声部时发生错误: ${e.message}`}}}function O(t){if(!t||t.length<2)return{chords:[],error:"和弦检测至少需要输入两个音符。"};try{return typeof m!="function"?(console.error("detectChordFromNotes - ERROR: Chord.detect 不是一个函数!"),{chords:[],error:"内部错误：无法访问和弦检测功能。"}):{chords:m(t),error:null}}catch(r){return console.error("detectChordFromNotes - ERROR during Chord.detect:",r),{chords:[],error:`和弦检测过程中发生错误: ${r.message}`}}}function A(t,r){try{const o=D(t,r),e=f(o);return e.empty?{note:null,error:`应用音程 "${r}" 到 "${t}" 时出错，结果无效。`}:{note:e.name,error:null}}catch(o){return console.error("计算单音程移调时出错:",o),{note:null,error:`移调时发生错误: ${o.message}`}}}function b(t){const r=f(t);if(r.empty||r.oct===null)return null;let o="";return r.acc==="b"?o="b":r.acc==="#"?o="#":r.acc==="bb"?o="bb":(r.acc==="x"||r.acc==="##")&&(o="##"),`${r.letter.toLowerCase()}${o}/${r.oct}`}function T(t){if(!t||t.length===0)return"treble";const r=t.map(e=>h(e)).filter(e=>e!==null);return r.length===0||r.reduce((e,n)=>e+n,0)/r.length>=60?"treble":"bass"}function G(t,r,o,e=!1){if(!t||!t.harmonicScoreDiv||!t.melodicScoreDiv){console.error("渲染音程谱例错误：缺少 elements 或 score divs。"),t&&t.errorOutput&&(t.errorOutput.textContent="渲染谱例时发生内部错误。");return}const n=b(r),i=b(o);if(!n||!i){console.error("无法为 VexFlow 准备 keys:",r,o),t.errorOutput&&(t.errorOutput.textContent="无法渲染：音符格式无效");return}const a=t.harmonicScoreDiv.id,c=t.melodicScoreDiv.id;if(!a||!c){console.error("渲染错误：VexFlow 容器缺少 ID。"),t.errorOutput&&(t.errorOutput.textContent="渲染错误：容器缺少 ID。");return}t.harmonicTitle.textContent="和声音程",t.melodicTitle.textContent="旋律音程",t.harmonicTitle.style.display="block",t.melodicTitle.style.display="block";const l=T([r,o]);t.harmonicScoreDiv.innerHTML="",t.melodicScoreDiv.innerHTML="";const u={elementId:a,width:150,height:150,staves:[{clef:l,notes:[{keys:[n,i].sort(),duration:"w"}]}]},s={elementId:c,width:200,height:150,staves:[{clef:l,notes:[{keys:[n],duration:"h"},{keys:[i],duration:"h"}]}]};try{x(a,u),x(c,s)}catch(d){console.error("渲染音程谱例出错:",d),t.errorOutput&&(t.errorOutput.textContent=`渲染错误: ${d.message}`)}}function K(t,r){if(console.log("renderVoicingScores - 接收到的音符:",[...r]),!t||!t.harmonicScoreDiv||!t.melodicScoreDiv){console.error("渲染声部谱例错误：缺少 elements 或 score divs。"),t&&t.errorOutput&&(t.errorOutput.textContent="渲染谱例时发生内部错误。");return}if(!r||r.length<1){console.error("渲染声部谱例错误：无效的音符数组。"),t&&t.errorOutput&&(t.errorOutput.textContent="无法渲染谱例：无有效音符。");return}const o=r.map(b).filter(u=>u);if(o.length!==r.length){console.error("部分音符无法转换为 VexFlow keys:",r),t&&t.errorOutput&&(t.errorOutput.textContent="渲染谱例时发生错误：部分音符格式无效。");return}const e=t.harmonicScoreDiv.id,n=t.melodicScoreDiv.id;if(!e||!n){console.error("渲染错误：VexFlow 容器缺少 ID。"),t.errorOutput&&(t.errorOutput.textContent="渲染错误：容器缺少 ID。");return}t.harmonicTitle.textContent="和声声部",t.melodicTitle.textContent="旋律序列",t.harmonicTitle.style.display="block",t.melodicTitle.style.display="block";const i=T(r);t.harmonicScoreDiv.innerHTML="",t.melodicScoreDiv.innerHTML="";const a={elementId:e,width:Math.max(150,40+o.length*20),height:150,staves:[{clef:i,notes:[{keys:o.slice().sort(),duration:"w"}]}]},c=o.map(u=>({keys:[u],duration:"q"})),l={elementId:n,width:Math.max(200,60+c.length*40),height:150,staves:[{clef:i,timeSignature:`${c.length}/4`,notes:c}]};c.length>8?(l.staves[0].timeSignature="4/4",l.width=Math.max(300,60+c.length*30)):c.length>0&&(l.staves[0].timeSignature=`${c.length}/4`);try{x(e,a),x(n,l)}catch(u){console.error("渲染 VexFlow 谱例时出错:",u),t.errorOutput&&(t.errorOutput.textContent=`渲染谱例时发生错误: ${u.message}`),t.harmonicTitle.style.display="none",t.melodicTitle.style.display="none"}}function g(t){t&&(t.errorOutput.textContent="",t.errorOutput.style.display="none",t.voicingNotesOutput.textContent="",t.chordDetectionOutput&&(t.chordDetectionOutput.textContent=""),t.intervalDetailsContainer&&(t.intervalDetailsContainer.style.display="none"),t.intervalNameOutput.textContent="",t.semitonesOutput.textContent="",t.consonanceOutput.textContent="",t.scoreContainer&&(t.scoreContainer.style.display="none"),t.harmonicScoreDiv.innerHTML="",t.melodicScoreDiv.innerHTML="",t.harmonicTitle&&(t.harmonicTitle.style.display="none"),t.melodicTitle&&(t.melodicTitle.style.display="none"),t.resultTitle&&(t.resultTitle.style.display="none"))}function p(t,r){g(t),t.errorOutput.textContent=`错误: ${r}`,t.errorOutput.style.display="block"}function j(t,r,o,e,n){if(g(t),!r||r.empty){p(t,"无法获取有效的音程属性。");return}t.resultTitle&&(t.resultTitle.style.display="block");const i=r.q,a=r.num,l=`${r.dir===-1?"-":""}${i}${a}`,u=r.semitones,s=B(r.name),d=Math.abs(r.num)>8;let y=`音程: ${l}`;if(e&&(y+=" (转位)"),n&&d){const N=M(r.name),C=v(N);if(C.empty)y+=" [无法简化]";else{const $=C.q,w=C.num,R=`${C.dir===-1?"-":""}${$}${w}`;y+=` [简化: ${R}]`}}t.intervalNameOutput.textContent=y,t.semitonesOutput.textContent=`半音数量: ${u}${e?" (转位)":""}`,t.consonanceOutput.textContent=`协和性: ${s}${e?" (转位)":""}`,t.intervalDetailsContainer&&(t.intervalDetailsContainer.style.display="block"),o&&o.length===2&&t.scoreContainer&&(t.scoreContainer.style.display="flex",G(t,o[0],o[1],e))}function S(t,r,o){if(g(t),!o||o.length===0){p(t,"无有效输入音符。");return}if(t.resultTitle&&(t.resultTitle.style.display="block"),t.intervalDetailsContainer&&(t.intervalDetailsContainer.style.display="none"),!t.voicingNotesOutput||!t.chordDetectionOutput){console.error("displayChordResult - ERROR: UI 元素缺失 (voicingNotesOutput 或 chordDetectionOutput)");return}t.voicingNotesOutput.textContent=`相关音符: ${o.join(" ")}`,r&&r.length>0?t.chordDetectionOutput.textContent=`检测到的和弦: ${r.join(", ")}`:t.chordDetectionOutput.textContent="未检测到明确的和弦。",t.scoreContainer?t.harmonicScoreDiv&&t.melodicScoreDiv?(t.scoreContainer.style.display="flex",K(t,o)):console.error("displayChordResult - ERROR: scoreContainer 内的谱例元素缺失！"):console.warn("displayChordResult - WARN: scoreContainer 元素未找到。")}function I(t){t&&(t.inputField.value="",g(t),t.invertCheckbox&&(t.invertCheckbox.checked=!1),t.simplifyCheckbox&&(t.simplifyCheckbox.checked=!1),console.log("输入和结果已清除。"))}function k(t){if(!t)return;const r=t.inputField.value,o=L(r);if(o.error){p(t,o.error);return}switch(o.mode){case"twoNotes":{const{notes:e}=o.data,n=t.invertCheckbox?t.invertCheckbox.checked:!1,i=t.simplifyCheckbox?t.simplifyCheckbox.checked:!1;let a=null,c=null;const l=H(e[0],e[1]);if(l.error)c=l.error;else if(!l.props||l.props.empty)console.error("handleCalculation - twoNotes - 原始计算结果无效但没有错误信息:",l),c="未能计算有效的原始音程。";else if(n)try{const u=q(l.props.name);if(!u||u==="")console.error("handleCalculation - twoNotes - Interval.invert 返回空!"),c="无法计算此音程的转位(空结果)。";else{const s=v(u);!s||s.empty?(console.error("handleCalculation - twoNotes - 获取转位属性失败!"),c="无法获取转位音程的属性。"):a=s}}catch(u){console.error("handleCalculation - twoNotes - 转位计算异常:",u),c=`计算转位时出错: ${u.message}`}else a=l.props;c?p(t,c):a&&!a.empty?j(t,a,e,n,i):(console.error("handleCalculation - twoNotes - 最终状态异常：无错误但结果无效。"),p(t,"无法获取有效的音程属性(最终检查)。"));break}case"multiIntervalVoicing":{const{baseNote:e,intervals:n}=o.data,i=P(e,n);if(i.error)p(t,i.error);else if(!i.notes||i.notes.length===0)console.error("handleCalculation - multiIntervalVoicing - voicingResult.notes 无效"),p(t,"未能生成有效的音符列表。");else{const a=O(i.notes);a.error?p(t,a.error):S(t,a.chords,i.notes)}break}case"chordDetect":{const{notes:e}=o.data,n=O(e);n.error?p(t,n.error):S(t,n.chords,e);break}default:p(t,"无法识别的处理模式。")}}function U(t){if(!t)return;t.calculateButton&&t.calculateButton.addEventListener("click",()=>k(t)),t.clearIntervalButton&&t.clearIntervalButton.addEventListener("click",()=>I(t)),t.inputField;const r=()=>{const e=(t.inputField?t.inputField.value:"").trim().split(/\s+/).filter(i=>i);let n=!1;if(e.length===2){const i=f(e[0]),a=f(e[1]),c=v(e[1]);!i.empty&&i.oct!==null&&(!a.empty&&a.oct!==null?n=!0:c.empty||(n=!0))}n?(console.log("Option changed, recalculating for interval mode."),k(t)):console.log("Option changed, but not in interval mode. No recalculation.")};t.invertCheckbox&&t.invertCheckbox.addEventListener("change",r),t.simplifyCheckbox&&t.simplifyCheckbox.addEventListener("change",r)}function X(t){if(!t){console.error("乐理分析器初始化失败: 未提供容器元素。");return}t.innerHTML=F;const r=E(t);r&&(U(r),I(r),console.log("乐理分析器工具已初始化 (支持音程/声部/和弦)。"))}export{X as initializeIntervalCalculator};
